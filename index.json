{
  "api/OmiyaGames.GameFeel.Editor.GameFeelSettingsBuilder.html": {
    "href": "api/OmiyaGames.GameFeel.Editor.GameFeelSettingsBuilder.html",
    "title": "Class GameFeelSettingsBuilder | Game Feel documentation",
    "keywords": "Class GameFeelSettingsBuilder Pre- and post-build script to add an instance of GameFeelSettings into the pre-loaded assets (and thus, build.) Inheritance Object GameFeelSettingsBuilder Namespace : OmiyaGames.GameFeel.Editor Assembly : cs.temp.dll.dll Syntax public class GameFeelSettingsBuilder : BaseSettingsBuilder<GameFeelSettings> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.0.0-pre.1 Date: 2/7/2022 Author: Taro Omiya Initial verison. Properties ConfigName Declaration public override string ConfigName { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.GameFeel.Editor.GameFeelSettingsEditor.html": {
    "href": "api/OmiyaGames.GameFeel.Editor.GameFeelSettingsEditor.html",
    "title": "Class GameFeelSettingsEditor | Game Feel documentation",
    "keywords": "Class GameFeelSettingsEditor Editor for GameFeelSettings . Appears under inspector when selecting the asset. Inheritance Object GameFeelSettingsEditor Namespace : OmiyaGames.GameFeel.Editor Assembly : cs.temp.dll.dll Syntax public class GameFeelSettingsEditor : SettingsEditor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.0.0-pre.1 Date: 2/7/2022 Author: Taro Omiya Initial version Properties SidebarDisplayPath Declaration public override string SidebarDisplayPath { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.GameFeel.Editor.GameFeelSettingsProvider.html": {
    "href": "api/OmiyaGames.GameFeel.Editor.GameFeelSettingsProvider.html",
    "title": "Class GameFeelSettingsProvider | Game Feel documentation",
    "keywords": "Class GameFeelSettingsProvider Editor for GameFeelSettings . Appears under the Project Settings window. Inheritance Object GameFeelSettingsProvider Namespace : OmiyaGames.GameFeel.Editor Assembly : cs.temp.dll.dll Syntax public class GameFeelSettingsProvider : BaseSettingsEditor<GameFeelSettings> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.0.0-pre.1 Date: 2/4/2022 Author: Taro Omiya Initial verison. Constructors GameFeelSettingsProvider(String, IEnumerable<String>) Constructs a project-scoped . Declaration public GameFeelSettingsProvider(string path, IEnumerable<string> keywords) Parameters Type Name Description String path IEnumerable < String > keywords Properties AddressableGroupName Declaration public override string AddressableGroupName { get; } Property Value Type Description String AddressableName Declaration public override string AddressableName { get; } Property Value Type Description String ConfigName Declaration public override string ConfigName { get; } Property Value Type Description String DefaultSettingsFileName Declaration public override string DefaultSettingsFileName { get; } Property Value Type Description String HeaderText Declaration public override string HeaderText { get; } Property Value Type Description String HelpUrl Declaration public override string HelpUrl { get; } Property Value Type Description String UxmlPath Declaration public override string UxmlPath { get; } Property Value Type Description String Methods CreateSettingsProvider() Registers this . Declaration public static SettingsProvider CreateSettingsProvider() Returns Type Description SettingsProvider"
  },
  "api/OmiyaGames.GameFeel.Editor.html": {
    "href": "api/OmiyaGames.GameFeel.Editor.html",
    "title": "Namespace OmiyaGames.GameFeel.Editor | Game Feel documentation",
    "keywords": "Namespace OmiyaGames.GameFeel.Editor Classes GameFeelSettingsBuilder Pre- and post-build script to add an instance of GameFeelSettings into the pre-loaded assets (and thus, build.) GameFeelSettingsEditor Editor for GameFeelSettings . Appears under inspector when selecting the asset. GameFeelSettingsProvider Editor for GameFeelSettings . Appears under the Project Settings window."
  },
  "api/OmiyaGames.GameFeel.GameFeelSettings.html": {
    "href": "api/OmiyaGames.GameFeel.GameFeelSettings.html",
    "title": "Class GameFeelSettings | Game Feel documentation",
    "keywords": "Class GameFeelSettings Inheritance Object GameFeelSettings Namespace : OmiyaGames.GameFeel Assembly : cs.temp.dll.dll Syntax public class GameFeelSettings : BaseSettingsData Properties CurrentVersion Declaration public override int CurrentVersion { get; } Property Value Type Description Int32 DefaultHitPauseDurationSeconds The default hit-pause duration, in seconds. Declaration public float DefaultHitPauseDurationSeconds { get; } Property Value Type Description Single Methods OnUpgrade(Int32, out String) Declaration protected override bool OnUpgrade(int oldVersion, out string errorMessage) Parameters Type Name Description Int32 oldVersion String errorMessage Returns Type Description Boolean"
  },
  "api/OmiyaGames.GameFeel.html": {
    "href": "api/OmiyaGames.GameFeel.html",
    "title": "Namespace OmiyaGames.GameFeel | Game Feel documentation",
    "keywords": "Namespace OmiyaGames.GameFeel Classes GameFeelSettings Juice"
  },
  "api/OmiyaGames.GameFeel.Juice.html": {
    "href": "api/OmiyaGames.GameFeel.Juice.html",
    "title": "Class Juice | Game Feel documentation",
    "keywords": "Class Juice Inheritance Object Juice Namespace : OmiyaGames.GameFeel Assembly : cs.temp.dll.dll Syntax public class Juice : BaseSettingsManager<Juice, GameFeelSettings> Fields ADDRESSABLE_NAME Name of the addressable. Declaration public const string ADDRESSABLE_NAME = \"GameFeelSettings\" Field Value Type Description String CONFIG_NAME The configuration name stored in Editor Settings. Declaration public const string CONFIG_NAME = \"com.omiyagames.gamefeel\" Field Value Type Description String SIDEBAR_PATH The name this settings will appear in the Project Setting's left-sidebar. Declaration public const string SIDEBAR_PATH = \"Project/Omiya Games/Game Feel\" Field Value Type Description String Properties AddressableName Declaration protected override string AddressableName { get; } Property Value Type Description String Methods HitPause(Single) Briefly pauses the game, creating the \"hit-pause\" effect. Declaration public static void HitPause(float durationSeconds = -1F) Parameters Type Name Description Single durationSeconds How long the effect lasts. Set to negative to use the default pause duration."
  },
  "index.html": {
    "href": "index.html",
    "title": "Omiya Games - Game Feel | Game Feel documentation",
    "keywords": "Omiya Games - Game Feel A tool for playing full-screen, juicy special effects. Currently a work-in-progress. Install There are two common methods for installing this package. Through Unity Package Manager Unity's own Package Manager supports importing packages through a URL to a Git repo : First, on this repository page, click the \"Clone or download\" button, and copy over this repository's HTTPS URL. Then click on the + button on the upper-left-hand corner of the Package Manager, select \"Add package from git URL...\" on the context menu, then paste this repo's URL! While easy and straightforward, this method has a few major downside: it does not support dependency resolution and package upgrading when a new version is released. To add support for that, the following method is recommended: Through OpenUPM Installing via OpenUPM's command line tool is recommended because it supports dependency resolution, upgrading, and downgrading this package. If you haven't already installed OpenUPM , you can do so through Node.js's npm (obviously have Node.js installed in your system first): npm install -g openupm-cli Then, to install this package, just run the following command at the root of your Unity project: openupm add com.omiyagames.gamefeel Resources Documentation Change Log LICENSE Overall package is licensed under MIT , unless otherwise noted in the 3rd party licenses file and/or source code. Copyright (c) 2022 Omiya Games"
  },
  "manual/changelog.html": {
    "href": "manual/changelog.html",
    "title": "Change Log: | Game Feel documentation",
    "keywords": "Change Log: 1.0.0-pre.1 Initial release! Added Juice.HitPause(float) for temporary time pauses."
  },
  "manual/README.html": {
    "href": "manual/README.html",
    "title": "| Game Feel documentation",
    "keywords": "This folder contains markdown files listed under \"Manual\" section in the documentation. When adding or removing any files in this folder, don't forget to update toc.yml accordingly!"
  }
}